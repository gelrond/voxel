// ********************************************************************************************************************
import { BufferAttribute, BufferGeometry } from 'three';
// ********************************************************************************************************************
import { GeometryData } from './geometry-data';
// ********************************************************************************************************************
import { GeometryDataList } from './geometry-data-list';
// ********************************************************************************************************************
export class GeometryBuilder {

    // ****************************************************************************************************************
    // geometry - the geometry
    // ****************************************************************************************************************
    private readonly geometry: GeometryDataList = new GeometryDataList();

    // ****************************************************************************************************************
    // indices - the indices
    // ****************************************************************************************************************
    private readonly indices: number[] = [];

    // ****************************************************************************************************************
    // constructor
    // ****************************************************************************************************************
    constructor() { }

    // ****************************************************************************************************************
    // function:    addGeometry
    // ****************************************************************************************************************
    // parameters:  geometry - the geometry
    // ****************************************************************************************************************
    // returns:     the index
    // ****************************************************************************************************************
    public addGeometry(geometry: GeometryData): number {

        return this.geometry.add(geometry);
    }

    // ****************************************************************************************************************
    // function:    addGeometries
    // ****************************************************************************************************************
    // parameters:  geometries - the geometries
    // ****************************************************************************************************************
    // returns:     the indices
    // ****************************************************************************************************************
    public addGeometries(geometries: GeometryData[]): number[] {

        return this.geometry.addMulti(geometries);
    }

    // ****************************************************************************************************************
    // function:    addIndex
    // ****************************************************************************************************************
    // parameters:  index - the index
    // ****************************************************************************************************************
    // returns:     n/a
    // ****************************************************************************************************************
    public addIndex(index: number): void {

        this.indices.push(index);
    }

    // ****************************************************************************************************************
    // function:    addIndices
    // ****************************************************************************************************************
    // parameters:  indices - the indices
    // ****************************************************************************************************************
    // returns:     n/a
    // ****************************************************************************************************************
    public addIndices(indices: number[]): void {

        this.indices.push(...indices);
    }

    // ****************************************************************************************************************
    // function:    generate
    // ****************************************************************************************************************
    // parameters:  n/a
    // ****************************************************************************************************************
    // returns:     the geometry buffer
    // ****************************************************************************************************************
    public generate(): BufferGeometry {

        const buffer = new BufferGeometry();

        // ************************************************************************************************************
        // setup colours
        // ************************************************************************************************************

        const colours = this.geometry.getColoursArray();

        if (colours.length) buffer.setAttribute('color', new BufferAttribute(colours, 3));

        // ************************************************************************************************************
        // setup normals
        // ************************************************************************************************************

        const normals = this.geometry.getNormalsArray();

        if (normals.length) buffer.setAttribute('normal', new BufferAttribute(normals, 3));

        // ************************************************************************************************************
        // setup uvs
        // ************************************************************************************************************

        const uvs = this.geometry.getUvsArray();

        if (uvs.length) buffer.setAttribute('uv', new BufferAttribute(uvs, 2));

        // ************************************************************************************************************
        // setup uv2s
        // ************************************************************************************************************

        const uv2s = this.geometry.getUv2sArray();

        if (uv2s.length) buffer.setAttribute('uv2', new BufferAttribute(uv2s, 2));

        // ************************************************************************************************************
        // setup vertices
        // ************************************************************************************************************

        const vertices = this.geometry.getPositionsArray();

        if (vertices.length) buffer.setAttribute('position', new BufferAttribute(vertices, 3));

        // ************************************************************************************************************
        // setup indices
        // ************************************************************************************************************

        if (this.indices.length) buffer.setIndex(this.indices);

        return buffer;
    }
}
