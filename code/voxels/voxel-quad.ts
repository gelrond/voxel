// ********************************************************************************************************************
import { Mesh, Scene } from 'three/src/Three';
// ********************************************************************************************************************
import { GeometryBuilder } from '../geometry/geometry-builder';
// ********************************************************************************************************************
import { Vector3 } from '../types/vector3';
// ********************************************************************************************************************
import { VoxelArea } from './voxel-area';
// ********************************************************************************************************************
export class VoxelQuad extends VoxelArea {

    // ****************************************************************************************************************
    // mesh - the mesh
    // ****************************************************************************************************************
    private mesh: Mesh | null = null;

    // ****************************************************************************************************************
    // constructor
    // ****************************************************************************************************************
    constructor(private readonly scene: Scene, public readonly location: Vector3, min: Vector3, max: Vector3) { super(min, max); }

    // ****************************************************************************************************************
    // function:    update
    // ****************************************************************************************************************
    // parameters:  n/a
    // ****************************************************************************************************************
    // returns:     n/a
    // ****************************************************************************************************************
    public update(): void {

        if (this.dirty) {

            if (this.mesh) this.scene.remove(this.mesh);

            const builder = new GeometryBuilder();

            this.createGeometry(builder);

            const geometry = builder.generate();

            this.mesh = new Mesh(geometry);

            this.scene.add(this.mesh);
        }
    }
}
